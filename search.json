[
  {
    "objectID": "02-avantages_inconvenients_env_R.html",
    "href": "02-avantages_inconvenients_env_R.html",
    "title": "Avantages et inconvénients des environnements R",
    "section": "",
    "text": "Environnements R\n          Avantages\n        Inconvénients\n\n\n\n\n       R base\n\nabsence de dépendance (ne s’appuie sur aucun package) : pas besoin d’installer un package, de gérer sa mise à jour, de craindre pour sa disparition\ngarantit la rétrocompatibilité du code : utile dans des environnements de production\ndans certains cas, se révèle la solution la plus simple\nparfois, la seule façon de faire\n\n\nne permet pas de gérer des bases de données plus volumineuses que la mémoire vive\nsyntaxe plus complexe et parfois incohérente\nsouvent moins rapide que les autres environnements\ndemande plus de connaissance sur le fonctionnement du langage R\ncertaines tâches sont plus simples à traiter avec les autres environnements\n\n\n\n       tidyverse\n\nplus simple à prendre en main\nsyntaxe plus simple que les autres environnements et cohérente\nlargement utilisé dans la communauté R\ntend à s’imposer comme la référence de la gestion de données sur R\nsyntaxe utilisée également dans les packages Arrow / DuckDb\n\n\nne permet pas de gérer des bases de données plus volumineuses que la mémoire vive\nglobalement moins rapide que data.table\ntâches non prévues plus difficiles à réaliser\nforte dépendance : la rétrocompatibilité n’est pas assurée, potentiel problème dans un environnement de production\n\n\n\n       data.table\n\nfaible dépendance : garantit une rétrocompatibilité élevée\nsyntaxe proche du R Base\nplus rapide et puissant que ses concur\n\n\nne permet pas de gérer des bases de données plus volumineuses que la mémoire vive\nsyntaxe parfois déroutante, incohérente, et peu explicite\ncertaines tâches sont plus simples à traiter avec les autres environnements\nmoins utilisé",
    "crumbs": [
      "Avantages et inconvénients des environnements R"
    ]
  },
  {
    "objectID": "Trucs et astuces en R.html",
    "href": "Trucs et astuces en R.html",
    "title": "Trucs et astuces en R",
    "section": "",
    "text": "Voici quelques trucs et astuces utiles à connaître sur R, issus en partie des livres The R Inferno et Advanced R, à consulter pour plus de détails.",
    "crumbs": [
      "Trucs et astuces"
    ]
  },
  {
    "objectID": "Trucs et astuces en R.html#effets-des-calculs-en-virgule-flottante",
    "href": "Trucs et astuces en R.html#effets-des-calculs-en-virgule-flottante",
    "title": "Trucs et astuces en R",
    "section": "1.1 Effets des calculs en virgule flottante",
    "text": "1.1 Effets des calculs en virgule flottante\n\nsqrt(2) ^ 2 == 2\n\n[1] FALSE\n\n1 / 49 * 49 == 1\n\n[1] FALSE\n\n.1 == .3 / 3\n\n[1] FALSE\n\nseq(0, 1, by=.1) == .3\n\n [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nunique(c(.3, .4 - .1, .5 - .2, .6 - .3, .7 - .4))\n\n[1] 0.3 0.3 0.3",
    "crumbs": [
      "Trucs et astuces"
    ]
  },
  {
    "objectID": "Trucs et astuces en R.html#les-types-dobjet",
    "href": "Trucs et astuces en R.html#les-types-dobjet",
    "title": "Trucs et astuces en R",
    "section": "1.2 Les types d’objet",
    "text": "1.2 Les types d’objet\n\n# En savoir plus sur ses données\ndata(\"cars\")\ntypeof(cars)\n\n[1] \"list\"\n\nclass(cars)\n\n[1] \"data.frame\"\n\nmode(cars)\n\n[1] \"list\"\n\nstr(cars)\n\n'data.frame':   50 obs. of  2 variables:\n $ speed: num  4 4 7 7 8 9 10 10 10 11 ...\n $ dist : num  2 10 4 22 16 10 18 26 34 17 ...\n\ndim(cars)\n\n[1] 50  2\n\nc(is.data.frame(cars), is.list(cars), is.vector(cars), is.array(cars))\n\n[1]  TRUE  TRUE FALSE FALSE\n\n\nNotation L\n\n# Notation L : imposer à R de créer un nombre sous format \"integer\", pour des raisons d'efficacité\nclass(1)\n\n[1] \"numeric\"\n\nclass(1L)\n\n[1] \"integer\"",
    "crumbs": [
      "Trucs et astuces"
    ]
  },
  {
    "objectID": "Trucs et astuces en R.html#les-affectations",
    "href": "Trucs et astuces en R.html#les-affectations",
    "title": "Trucs et astuces en R",
    "section": "1.3 Les affectations",
    "text": "1.3 Les affectations\n\n# Importance des espaces\nx&lt;-3\n# S'agit-il de ?\nx &lt;- 3\n# Ou de ?\nx &lt; -3\n\n[1] FALSE\n\n# Il s'agit du premier cas !\nx\n\n[1] 3\n\n\n\n# Les {} permettent de réaliser une affectation (&lt;-) au sein d'un traitement plus complexe !\n# Exemple ici : sommer les positions paires multipliées par 2 et les positions impaires multipliées par 3\nsum({x &lt;- 1:6 ; x[1:length(x) %% 2 == 0] &lt;- x[1:length(x) %% 2 == 0] * 2 ; x[1:length(x) %% 2 != 0] &lt;- x[1:length(x) %% 2 != 0] * 3 ; x})\n\n[1] 51\n\n\n\n# Afficher ou non la valeur de l'objet affecté pendant l'affectation\nx &lt;- pi\n(x &lt;- pi)\n\n[1] 3.141593\n\n\n\n# Comparaisons multiples\nx &lt;- 0.5\n# Correct\n0 &lt; x & x &lt; 1\n# Incorrect\n0 &lt; x &lt; 1\n\nError: &lt;text&gt;:6:7: unexpected '&lt;'\n5: # Incorrect\n6: 0 &lt; x &lt;\n         ^\n\n\n\n# Ne pas confondre !\nseq(0:10)\n\n [1]  1  2  3  4  5  6  7  8  9 10 11\n\n0:10\n\n [1]  0  1  2  3  4  5  6  7  8  9 10\n\nseq(0, 10)\n\n [1]  0  1  2  3  4  5  6  7  8  9 10\n\n\n\n# Privilégier seq_len à : lorsqu'il y a un risque de 0\n# Fonctionnement identique\nn &lt;- 5\n1:n\n\n[1] 1 2 3 4 5\n\nseq_len(n)\n\n[1] 1 2 3 4 5\n\n# Problème avec les 0\nn &lt;- 0\n1:n\n\n[1] 1 0\n\nseq_len(n)\n\ninteger(0)\n\n\n\n# Préférer seq_along à : au cas où la taille de l'objet est 0\nx &lt;- c() ;length(x)\n\n[1] 0\n\nfor(i in 1:length(x)) print(i)\n\n[1] 1\n[1] 0\n\nfor(i in seq_along(x)) print(i)\nfor(i in seq(along=x)) print(i)\n\n\n# Equivalent des list-comprehensions de type Python en R\n# Somme des entiers de 1 à 1 000 multiples de 3 ou 5, en une ligne !\n# 4 manières de faire\nsum({l &lt;- 1:1000 ; l[l %% 3 == 0 | l %% 5 == 0]})\n\n[1] 234168\n\nsum({l &lt;- 1:1000 ; l[seq_along(l) %% 3 == 0 | seq_along(l) %% 5 == 0]})\n\n[1] 234168\n\nsum(l&lt;-(1:1000)[l %% 3 == 0 | l %% 5 == 0])\n\n[1] 234168\n\nsum((1:1000)[(1:1000 %% 3) == 0 | (1:1000 %% 5) == 0])\n\n[1] 234168\n\n\n\n# Opérations mathématiques\n# Infini\n1/0\n\n[1] Inf\n\n# Nan = not a number\n0/0\n\n[1] NaN\n\nlog(-1)\n\n[1] NaN",
    "crumbs": [
      "Trucs et astuces"
    ]
  },
  {
    "objectID": "Trucs et astuces en R.html#principe-de-vectorisation",
    "href": "Trucs et astuces en R.html#principe-de-vectorisation",
    "title": "Trucs et astuces en R",
    "section": "1.4 Principe de vectorisation",
    "text": "1.4 Principe de vectorisation\nLa fonction s’applique à tous les éléments du vecteur !!\n\n# Exemple de vecteur\nvaleurs &lt;- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\nvaleurs &lt;- 1:10\n\n\n# Valeurs au carré\nvaleurs ** 2\n\n [1]   1   4   9  16  25  36  49  64  81 100\n\n\n\n# logarithme des valeurs\nlog(valeurs)\n\n [1] 0.0000000 0.6931472 1.0986123 1.3862944 1.6094379 1.7917595 1.9459101\n [8] 2.0794415 2.1972246 2.3025851\n\n\n\n# Maximum des valeurs\nmax(valeurs)\n\n[1] 10\n\n\n\n# Limite des valeurs\nrange(valeurs)\n\n[1]  1 10\n\n\n\n# Correct\nmean(valeurs)\n\n[1] 5.5\n\n\n\n# Correct\nmean(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n\n[1] 5.5\n\n\n\n# Inattendu\nmean(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n\n[1] 1\n\n\n\n# Attention aux parenthèses !\nn &lt;- 10\n# Inattendu ! Correspond à (1-1, 2-1, 3-1, ..., 10-1)\n1:n-1\n\n [1] 0 1 2 3 4 5 6 7 8 9\n\n# Correct\n1:(n-1)\n\n[1] 1 2 3 4 5 6 7 8 9\n\n\n\n# Minimum ou maximum élément par élément\nx1 &lt;- c(1, 2, 5, 6, 8)\nx2 &lt;- c(4, 0, 7, 2, 1)\n# Minimum : 2 possibilités\npmin(x1, x2)\n\n[1] 1 0 5 2 1\n\nmapply(min, x1, x2)\n\n[1] 1 0 5 2 1\n\n# Maximum : 2 possibilités\npmax(x1, x2)\n\n[1] 4 2 7 6 8\n\nmapply(max, x1, x2)\n\n[1] 4 2 7 6 8\n\n\n\n# Calculer (x - min) / (max - min) pour chaque élément x d'un vecteur\nx &lt;- c(1,2,3)\nsapply(x, function(xi, mn, mx) {(xi - mn) / (mx - mn)}, mn = min(x), mx = max(x))\n\n[1] 0.0 0.5 1.0",
    "crumbs": [
      "Trucs et astuces"
    ]
  },
  {
    "objectID": "Trucs et astuces en R.html#principe-de-coercion",
    "href": "Trucs et astuces en R.html#principe-de-coercion",
    "title": "Trucs et astuces en R",
    "section": "1.5 Principe de coercion",
    "text": "1.5 Principe de coercion\nDans les comparaisons, les objets R sont successivement convertis en logical, integer, numeric, complex et character, jusqu’à ce que la comparaison puisse se faire.\n\n# TRUE / FALSE est transformé en integer (1 / 0)\nTRUE == 1\n\n[1] TRUE\n\nTRUE == 2\n\n[1] FALSE\n\nFALSE == 0\n\n[1] TRUE\n\n\n\n# TRUE est convertit en character\nTRUE == \"1\"\n\n[1] FALSE\n\n\n\n# 5 est convertit en character\n5 &lt; '7'\n\n[1] TRUE\n\n\n\n# 50 est convertit en character\n50 &lt; '7'\n\n[1] TRUE",
    "crumbs": [
      "Trucs et astuces"
    ]
  },
  {
    "objectID": "Trucs et astuces en R.html#principe-de-recycling",
    "href": "Trucs et astuces en R.html#principe-de-recycling",
    "title": "Trucs et astuces en R",
    "section": "1.6 Principe de recycling",
    "text": "1.6 Principe de recycling\n\n# Fonctionne sans soulever de message d'erreur\nx &lt;- c(1, 2, 3)\ny &lt;- c(1, 2, 3, 4, 5, 6)\nx + y\n\n[1] 2 4 6 5 7 9\n\n\n\n# Fonctionne, mais Warning\nx &lt;- c(1, 2, 3)\ny &lt;- c(1, 2, 3, 4, 5, 6, 7)\nx + y\n\nWarning in x + y: longer object length is not a multiple of shorter object\nlength\n\n\n[1] 2 4 6 5 7 9 8",
    "crumbs": [
      "Trucs et astuces"
    ]
  },
  {
    "objectID": "Trucs et astuces en R.html#opérateurs-de-contrôle",
    "href": "Trucs et astuces en R.html#opérateurs-de-contrôle",
    "title": "Trucs et astuces en R",
    "section": "1.7 Opérateurs de contrôle",
    "text": "1.7 Opérateurs de contrôle\n\n# Conditions if / else\nx &lt;- 1\n\n\n# Correct\nif (identical(x, 1)) {\nprint(\"x est égal à 1\")\n} else {\nprint(\"x est différent de 1\")\n}\n\n[1] \"x est égal à 1\"\n\n\n\n# Correct\nif (identical(x, 1)) {print(\"x est égal à 1\")\n} else {print(\"x est différent de 1\")}\n\n[1] \"x est égal à 1\"\n\n\n\n# Correct\nif (identical(x, 1)) print(\"x est égal à 1\") else\nprint(\"x est différent de 1\")\n\n[1] \"x est égal à 1\"\n\n\n\n# Correct\nif (identical(x, 1)) print(\"x est égal à 1\") else print(\"x est différent de 1\")\n\n[1] \"x est égal à 1\"\n\n\n\n# Incorrect\nif (identical(x, 1)) print(\"x est égal à 1\")\nelse print(\"x est différent de 1\")\n\nError: &lt;text&gt;:3:1: unexpected 'else'\n2: if (identical(x, 1)) print(\"x est égal à 1\")\n3: else\n   ^\n\n\n\n# Switch\n# Fonctions et conditions if / else\ncondition &lt;- function(langue = \"Français\") {\nif (langue == \"Français\") {\n\"salut\"\n} else if (langue == \"Anglais\") {\n\"hello\"\n} else if (langue == \"Russe\") {\n\"привет\"\n} else {\nstop(\"salut\")\n}\n}\ncondition(\"Anglais\")\n\n[1] \"hello\"\n\n\n\n# Autre possibilité avec switch, mais à réserver aux variables caractères !\ncondition &lt;- function(langue = \"Français\") {\nswitch(langue,\nFrançais = \"salut\",\nAnglais = \"hello\",\nRusse = \"привет\",\nstop(\"salut\")\n)\n}\ncondition(\"Français\")\n\n[1] \"salut\"\n\n\n\n# Penser au print\nfor(i in 1:5) i\nfor(i in 1:5) print(i)\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\n\n# Différences print et cat\ncat(\"Salut !\\nComment vas-tu ?\")\n\nSalut !\nComment vas-tu ?\n\nprint(\"Salut !\\nComment vas-tu ?\")\n\n[1] \"Salut !\\nComment vas-tu ?\"",
    "crumbs": [
      "Trucs et astuces"
    ]
  },
  {
    "objectID": "Trucs et astuces en R.html#les-valeurs-manquantes",
    "href": "Trucs et astuces en R.html#les-valeurs-manquantes",
    "title": "Trucs et astuces en R",
    "section": "1.8 Les valeurs manquantes",
    "text": "1.8 Les valeurs manquantes\n\n# Transformer les valeurs manquantes en 0\nx &lt;- data.frame(X1 = c(1, NA, 2), X2 = c(NA, NA, 3))\nx\n\n  X1 X2\n1  1 NA\n2 NA NA\n3  2  3\n\nx[is.na(x)] &lt;- 0\nx\n\n  X1 X2\n1  1  0\n2  0  0\n3  2  3\n\n\n\n# Pour les valeurs manquantes, toujours utiliser is.na et non ==\nNA == c(3, 1, 3, NA)\n\n[1] NA NA NA NA\n\nis.na(c(3, 1, 3, NA))\n\n[1] FALSE FALSE FALSE  TRUE\n\n\n\n# Utiliser %in% et non == pour vérifier une appartenance à plusieurs variables\nx1 &lt;- 1:6\nx1 == c(1, 5)\n\n[1]  TRUE FALSE FALSE FALSE FALSE FALSE\n\nx1 %in% c(1, 5)\n\n[1]  TRUE FALSE FALSE FALSE  TRUE FALSE\n\n\n\n# Sélection de données en cas de valeurs manquantes\nxna &lt;- c(1, NA, 3, 2, 4, 2)\n\n\n# Avec ce code, les NA sont conservés\nxna[xna == 2]\n\n[1] NA  2  2\n\n\n\n# Code sans les NA\nxna[!is.na(xna) & xna == 2]\n\n[1] 2 2\n\n\n\n# Code compact sans les NA\nxna[which(xna == 2)]\n\n[1] 2 2\n\n\n\n# Incidence des NA dans le calcul de statistiques !\n# Besoin de l'instruction na.rm = TRUE pour en supprimer l'incidence\nx &lt;- c(1, 5, 6, NA, 8)\nmean(x)\n\n[1] NA\n\nmean(x, na.rm = TRUE)\n\n[1] 5\n\nmax(x)\n\n[1] NA\n\nmax(x, na.rm = TRUE)\n\n[1] 8\n\n\n\n# Une moyenne de NA donne NaN (Not a Number) avec na.rm = TRUE !\nmean(c(NA, NA, NA), na.rm = TRUE)\n\n[1] NaN\n\n# Et donne NA avec na.rm = FALSE !\nmean(c(NA, NA, NA), na.rm = FALSE)\n\n[1] NA",
    "crumbs": [
      "Trucs et astuces"
    ]
  },
  {
    "objectID": "Trucs et astuces en R.html#sélection-déléments",
    "href": "Trucs et astuces en R.html#sélection-déléments",
    "title": "Trucs et astuces en R",
    "section": "1.9 Sélection d’éléments",
    "text": "1.9 Sélection d’éléments\n\n# Le 1er élément est numéroté 1 et non 0 comme dans Python\nx &lt;- 1:3\nx[c(0, 4)] &lt;- c(-1, 9)\n# Marche !!\nfor(i in 0:3) print(x[i])\n\nnumeric(0)\n[1] 1\n[1] 2\n[1] 3\n\n\n\n# Cas où les noms ne sont pas uniques\nx &lt;- c(a = 1, b = 2, a = 3)\nx[\"a\"]\n\na \n1 \n\nx[names(x) %in% \"a\"]\n\na a \n1 3 \n\n\n\n# Options drop = FALSE\nx &lt;- data.frame(X1 = c(1,2), X2 = c(3,4), x3 = c(5,6))\nis.data.frame(x[, c(1,2)])\n\n[1] TRUE\n\nis.data.frame(x[, c(1)])\n\n[1] FALSE\n\nis.data.frame(x[, c(1), drop = FALSE])\n\n[1] TRUE\n\n\n\n# Fonction subset\nx &lt;- data.frame(x1 = c(1,2), x2 = c(3,4), x3 = c(5,6))\nsubset(x, select = x1)\n\n  x1\n1  1\n2  2\n\nsubset(x, select = -x1)\n\n  x2 x3\n1  3  5\n2  4  6\n\n\n\n# Correct\nsubset(x, x1 == 1)\n\n  x1 x2 x3\n1  1  3  5\n\n\n\n# Incorrect\nsubset(x, x1 = 1)\n\n  x1 x2 x3\n1  1  3  5\n2  2  4  6\n\n\n\n# Référence à des noms de colonne non usuels\ndf &lt;- data.frame(x = rnorm(5), y = runif(5))\nnames(df) &lt;- 1:2\n\n# Correct\ndf$`1`\n\n# Incorrect\ndf$1\n\nError: &lt;text&gt;:9:4: unexpected numeric constant\n8: # Incorrect\n9: df$1\n      ^\n\n\n\n# Utilisation de assign pour assigner une valeur à un objet en le désignant sous forme caractère\nassign('objet', 3:5)\nobjet\n\n[1] 3 4 5\n\nfor(i in 1:5) assign(paste('objet', i, sep = '_'), i)\nobjet_5\n\n[1] 5",
    "crumbs": [
      "Trucs et astuces"
    ]
  },
  {
    "objectID": "Trucs et astuces en R.html#les-listes",
    "href": "Trucs et astuces en R.html#les-listes",
    "title": "Trucs et astuces en R",
    "section": "1.10 Les listes",
    "text": "1.10 Les listes\n\n# Ajouter un élément à une liste\nliste &lt;- list(1, 2)\n# Il faut passer par cette syntaxe\nliste &lt;- c(liste, list(3))\nliste\n\n[[1]]\n[1] 1\n\n[[2]]\n[1] 2\n\n[[3]]\n[1] 3\n\n\n\n# Trier une liste\nliste &lt;- list(\"2\" = 2, \"0\" = 0, \"1\" = 1)\nliste\n\n$`2`\n[1] 2\n\n$`0`\n[1] 0\n\n$`1`\n[1] 1\n\nliste[order(names(liste))]\n\n$`0`\n[1] 0\n\n$`1`\n[1] 1\n\n$`2`\n[1] 2\n\n\n\n# Extraction de listes\nliste &lt;- list(nombres = 1:5, lettres = letters[1:5])\nliste$nombres\n\n[1] 1 2 3 4 5\n\n\n\n# On veut faire appel à un élement de la liste à partir d'une variable extérieure\nvar &lt;- \"nombres\"\n\n\n# Ne marche pas, car nombres est en caractère\nliste$var\n\nNULL\n\n\n\n# Fonctionne\nliste[[var]]\n\n[1] 1 2 3 4 5\n\n\n\n# Sélection dans une liste\nliste &lt;- list(nombres = 1:5, lettres = letters[1:5])\nliste[\"nombres\"]\n\n$nombres\n[1] 1 2 3 4 5\n\nis.list(liste[\"nombres\"])\n\n[1] TRUE\n\nliste[[\"nombres\"]]\n\n[1] 1 2 3 4 5\n\nis.list(liste[[\"nombres\"]])\n\n[1] FALSE\n\n\n\n# Suppression des éléments d'une liste\nliste &lt;- list(nombres = 1:5, lettres = letters[1:5])\nliste[-1]\n\n$lettres\n[1] \"a\" \"b\" \"c\" \"d\" \"e\"\n\nliste[\"nombres\"] &lt;- NULL\nliste\n\n$lettres\n[1] \"a\" \"b\" \"c\" \"d\" \"e\"",
    "crumbs": [
      "Trucs et astuces"
    ]
  },
  {
    "objectID": "Trucs et astuces en R.html#informations-sur-r",
    "href": "Trucs et astuces en R.html#informations-sur-r",
    "title": "Trucs et astuces en R",
    "section": "1.11 Informations sur R",
    "text": "1.11 Informations sur R\n\n# Informations sur la session de R\nsessionInfo()\nSys.info()\n.Platform\n\n# Version de R\nR.version.string\n\n# Lien vers le bureau de l'utilisateur\nfile.path(path.expand('~'), \"Desktop\")\n\n# Chemin de l'exécutable R est-il installé ?\nR.home(\"bin\")\n\n# Où sont installés les packages R\n.libPaths()",
    "crumbs": [
      "Trucs et astuces"
    ]
  },
  {
    "objectID": "Trucs et astuces en R.html#trucs-et-astuces-divers",
    "href": "Trucs et astuces en R.html#trucs-et-astuces-divers",
    "title": "Trucs et astuces en R",
    "section": "1.12 Trucs et astuces divers",
    "text": "1.12 Trucs et astuces divers\n\n# Créer un objet sous forme de code R !\ndata(\"mtcars\")\ndput(mtcars)\n\nstructure(list(mpg = c(21, 21, 22.8, 21.4, 18.7, 18.1, 14.3, \n24.4, 22.8, 19.2, 17.8, 16.4, 17.3, 15.2, 10.4, 10.4, 14.7, 32.4, \n30.4, 33.9, 21.5, 15.5, 15.2, 13.3, 19.2, 27.3, 26, 30.4, 15.8, \n19.7, 15, 21.4), cyl = c(6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, \n8, 8, 8, 8, 8, 4, 4, 4, 4, 8, 8, 8, 8, 4, 4, 4, 8, 6, 8, 4), \n    disp = c(160, 160, 108, 258, 360, 225, 360, 146.7, 140.8, \n    167.6, 167.6, 275.8, 275.8, 275.8, 472, 460, 440, 78.7, 75.7, \n    71.1, 120.1, 318, 304, 350, 400, 79, 120.3, 95.1, 351, 145, \n    301, 121), hp = c(110, 110, 93, 110, 175, 105, 245, 62, 95, \n    123, 123, 180, 180, 180, 205, 215, 230, 66, 52, 65, 97, 150, \n    150, 245, 175, 66, 91, 113, 264, 175, 335, 109), drat = c(3.9, \n    3.9, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.92, \n    3.07, 3.07, 3.07, 2.93, 3, 3.23, 4.08, 4.93, 4.22, 3.7, 2.76, \n    3.15, 3.73, 3.08, 4.08, 4.43, 3.77, 4.22, 3.62, 3.54, 4.11\n    ), wt = c(2.62, 2.875, 2.32, 3.215, 3.44, 3.46, 3.57, 3.19, \n    3.15, 3.44, 3.44, 4.07, 3.73, 3.78, 5.25, 5.424, 5.345, 2.2, \n    1.615, 1.835, 2.465, 3.52, 3.435, 3.84, 3.845, 1.935, 2.14, \n    1.513, 3.17, 2.77, 3.57, 2.78), qsec = c(16.46, 17.02, 18.61, \n    19.44, 17.02, 20.22, 15.84, 20, 22.9, 18.3, 18.9, 17.4, 17.6, \n    18, 17.98, 17.82, 17.42, 19.47, 18.52, 19.9, 20.01, 16.87, \n    17.3, 15.41, 17.05, 18.9, 16.7, 16.9, 14.5, 15.5, 14.6, 18.6\n    ), vs = c(0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, \n    0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1), am = c(1, \n    1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, \n    0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1), gear = c(4, 4, 4, 3, \n    3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, \n    3, 3, 4, 5, 5, 5, 5, 5, 4), carb = c(4, 4, 1, 1, 2, 1, 4, \n    2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, 2, 2, 4, 2, 1, \n    2, 2, 4, 6, 8, 2)), row.names = c(\"Mazda RX4\", \"Mazda RX4 Wag\", \n\"Datsun 710\", \"Hornet 4 Drive\", \"Hornet Sportabout\", \"Valiant\", \n\"Duster 360\", \"Merc 240D\", \"Merc 230\", \"Merc 280\", \"Merc 280C\", \n\"Merc 450SE\", \"Merc 450SL\", \"Merc 450SLC\", \"Cadillac Fleetwood\", \n\"Lincoln Continental\", \"Chrysler Imperial\", \"Fiat 128\", \"Honda Civic\", \n\"Toyota Corolla\", \"Toyota Corona\", \"Dodge Challenger\", \"AMC Javelin\", \n\"Camaro Z28\", \"Pontiac Firebird\", \"Fiat X1-9\", \"Porsche 914-2\", \n\"Lotus Europa\", \"Ford Pantera L\", \"Ferrari Dino\", \"Maserati Bora\", \n\"Volvo 142E\"), class = \"data.frame\")\n\n\n\n# En tidyverse, la fonction tribble peut être utile pour créer des bases lignes par lignes\nlibrary(tidyverse)\ntribble(\n  ~x, ~y,\n  \"a\",   1,\n  \"b\",   2\n)\n\n# A tibble: 2 × 2\n  x         y\n  &lt;chr&gt; &lt;dbl&gt;\n1 a         1\n2 b         2\n\n\n\n# Outils de debuggage\noptions(error = recover)\noptions(error=NULL)\n\n\n# Définir ses propres opérateurs\n# R reconnait le texte entre %% comme un opérateur binaire\n# Exemple, simplifier la fonction paste\n'%+%' &lt;- function(x, y) { paste(x, y, sep = \"\") }\n\"Groupe_\" %+% 0:9\n\n [1] \"Groupe_0\" \"Groupe_1\" \"Groupe_2\" \"Groupe_3\" \"Groupe_4\" \"Groupe_5\"\n [7] \"Groupe_6\" \"Groupe_7\" \"Groupe_8\" \"Groupe_9\"",
    "crumbs": [
      "Trucs et astuces"
    ]
  },
  {
    "objectID": "Trucs et astuces en R.html#comment-utiliser-cet-aide-mémoire",
    "href": "Trucs et astuces en R.html#comment-utiliser-cet-aide-mémoire",
    "title": "Trucs et astuces en R",
    "section": "2.1 Comment utiliser cet aide-mémoire ?",
    "text": "2.1 Comment utiliser cet aide-mémoire ?\nSont présentés dans cet aide-mémoire des programmes statistiques courants pour la gestion de données statistiques, traduits dans les langages SAS et R (environnements R-Base, Tidyverse et data.table). Ces tâches sont standards dans l’analyse statistique et réalisables en un petit nombre d’instructions.\nCet aide-mémoire vise à faciliter la traduction des programmes statistiques entre ces différents langages (de SAS vers R, et d’un environnement R à un autre), et leur appropriation.\nIl est présenté sous forme de tâches élémentaires statistiques (sélection de lignes ou de colonnes d’une base de données, repérage des doublons, etc.).\nTrois grands environnements R sont traités : R-Base, Tidyverse et data.table. Ils ne doivent pas être vus comme des concurrents, mais comme des compléments :\n\ncertaines tâches peuvent être plus ou moins facilement réalisés avec l’un ou l’autre ;\nils présentent chacun des avantages et des inconvénients ;\nils laissent le choix de la stratégie de codage.\n\nCe guide est destiné à vous permettre de jongler plus facilement entre les environnements.\nPlusieurs solutions pour réaliser la même tâche sont proposées dans ce guide :\n\ncertaines solutions peuvent être plus concises, mais moins claires ;\nd’autres plus ou moins rapides en fonction des données et des matériels et logiciels utilisés ;\ncertaines façons de procéder sont plus efficaces que d’autres en R, mais cela peut dépendre des données et du matériel utilisé.\n\nL’attention du lecteur est attirée sur le fait que :\n\nce guide n’est pas exhaustf. Ainsi, les environnements peuvent proposer des solutions ad-hoc simplifiant grandement la résolution de problèmes moins courants et qui ne sont pas présents dans les autres environnements (ex. des rolling joins de data.table) ;\nce guide ne traite pas de ces stratégies, et le lecteur est invité à se documenter sur les environnements pour en savoir plus ;\nl’exercice de traduction de SAS vers R peut s’apparenter à la traduction d’un texte en langue étrangère. De même qu’une traduction littérale d’un texte en peut parfois être de mauvaise qualité, la traduction littérale d’une masse de codes SAS en codes R au moyen de cet aide-mémoire peut produire des résultats décevants. En effet, toute bonne traduction nécessite au moins a minima d’adapter le code SAS à une “nouvelle langue”, celle de R. La partie sur les spécificités de SAS par rapport à R peut vous aider sur ce point.",
    "crumbs": [
      "Trucs et astuces"
    ]
  },
  {
    "objectID": "Trucs et astuces en R.html#spécificités-de-sas-par-rapport-à-r",
    "href": "Trucs et astuces en R.html#spécificités-de-sas-par-rapport-à-r",
    "title": "Trucs et astuces en R",
    "section": "2.2 Spécificités de SAS par rapport à R",
    "text": "2.2 Spécificités de SAS par rapport à R\nVoici une liste non-exhaustive de spécificités de SAS par rapport à R à connaître.\nR est sensible à la casse, ce qui n’est pas le cas de SAS. Un même nom de variable en majuscule et en minuscule désigne deux variables différentes en R, une seule en SAS.\nR est un logiciel libre (ce qui implique notamment qu’il est gratuit, librement reproductible, modifiable et diffusable, et son code source est ouvert). En revanche, SAS est un logiciel propriétaire.\nSAS est un langage centralisé, R un langage décentralisé.\nDe par son statut de logiciel libre, de multiples extensions existent (packages). L’usage des packages :\n\npeut être un atout, car les packages permettent de réaliser plus facilement des choses complexes ;\npeut aussi être source de problèmes, d’abord de maintenance du fait des dépendances (une mise-à-jour peut casser les dépendances), ensuite du fait que des packages peuvent disparaître ou ne plus être maintenus au cours du temps, engendrant des coûts de maintenance de code ;\npeut engendrer des problèmes de rétrocompatibilité (un code écrit dans le passé ne fonctionne plus suite à une mise-à-jour) : il convient d’être conscient de ces considérations avant d’utiliser aveuglément des packages.\n\nR propose plusieurs façons de procéder (différents environnements, différents packages, etc.), tandis que SAS tend à ne proposer qu’une ou deux solutions.\nR est le langage / logiciel, à ne pas confondre avec RStudio, qui est uniquement un IDE (Integrated Development Environment, interface graphique), parmi d’autres. Une telle distinction n’a pas lieu pour SAS.\nLa gestion de la mémoire est différente entre les logiciels. R importe l’ensemble des données en mémoire vive, SAS en copie une partie sur le disque dur. Ceci a plusieurs implications pour le travail statistique :\n\nsi le volume des données excède la mémoire vive, il n’est pas possible de les traiter nativement en R. Il faut alors utiliser des stratégies alternatives ;\nil faut être parcimonieux sur le nombre de colonnes à inclure dans les bases de données en R. Par exemple, il vaut mieux recréer dans le programme les variables explicatives faciles à obtenir plutôt que les inclure dans la base de données, où elles occupent de la place et accaparent de la mémoire vive.\n\nQuelles solutions adopter dans le cas où les données à mpanipuler ne tiennent pas en mémoire vive de l’ordinateur ?\n\nchercher à réduire la taille de la base de données en supprimant des colonnes inutiles ;\nchercher à modifier le processus de production pour le rendre moins gourmand en mémoire ;\naugmenter la mémoire vive de son ordinateur ;\nutiliser les packages Arrow et DuckDb qui peuvent gérer des données excédant la mémoire vive.\n\nR a plusieurs spécificités à connaître par rapport à SAS : COMPLETER\n\nvectorisation plutôt que boucle (ex.)\nrecycling\nfonctions plutôt que macro\ngestion de la mémoire spécifique : shallow / deep copy, créer une colonne / une ligne pour l’exemple / Exemple de boucle inefficace / certaines façons sont +/- efficaces",
    "crumbs": [
      "Trucs et astuces"
    ]
  },
  {
    "objectID": "01-aide_memoire_r_sas.html",
    "href": "01-aide_memoire_r_sas.html",
    "title": "Aide-mémoire SAS - R",
    "section": "",
    "text": "SASR basetidyversedata.tablearrow/duckdbpolars\n\n\n/* Sans objet pour SAS */\n\n\n\n# Sans objet pour R-Base\n\n# Cependant, on importe le package lubridate pour faciliter la gestion des dates\n\n# Les packages doivent au préalable être installés sur le disque dur\n# Pour installer un package :\n# install.packages(\"nom_du_package\")\n\n# Pour manipuler les dates\nlibrary(lubridate)\n\n\n\n\n# Les packages doivent au préalable être installés sur le disque dur\n# Pour installer un package :\n# install.packages(\"nom_du_package\")\n\n# Chargement des packages\n# Pour manipuler les dates\nlibrary(lubridate)\n# Pour utiliser le pipe %&gt;%\nlibrary(magrittr)\n# Le tidyverse proprement dit\nlibrary(tidyverse)\n# Les packages importés par le tidyverse sont :\n# - dplyr (manipulation de données)\n# - tidyr (réorganisation de bases de données)\n# - readr (importation de données)\n# - purrr (permet de réaliser des boucles)\n# - tibble (format de données tibble, complémentaire du data.frame)\n# - stringr (manipulation de chaînes de caractères)\n# - ggplot2 (création de graphiques)\n# - forcats (gestion des formats \"factors\")\n# Documentation de tidyverse\nvignette(\"dplyr\")\n\n\n\n\n# Les packages doivent au préalable être installés sur le disque dur\n# Pour installer un package :\n# install.packages(\"nom_du_package\")\nlibrary(data.table)\n# Documentation de data.table\n?'[.data.table'\n# Pour manipuler les dates\nlibrary(lubridate)",
    "crumbs": [
      "Aide-mémoire"
    ]
  },
  {
    "objectID": "01-aide_memoire_r_sas.html#importation-des-packages-1",
    "href": "01-aide_memoire_r_sas.html#importation-des-packages-1",
    "title": "Aide-mémoire SAS - R",
    "section": "",
    "text": "SASR basetidyversedata.tablearrow/duckdbpolars\n\n\n/* Sans objet pour SAS */\n\n\n\n# Sans objet pour R-Base\n\n# Cependant, on importe le package lubridate pour faciliter la gestion des dates\n\n# Les packages doivent au préalable être installés sur le disque dur\n# Pour installer un package :\n# install.packages(\"nom_du_package\")\n\n# Pour manipuler les dates\nlibrary(lubridate)\n\n\n\n\n# Les packages doivent au préalable être installés sur le disque dur\n# Pour installer un package :\n# install.packages(\"nom_du_package\")\n\n# Chargement des packages\n# Pour manipuler les dates\nlibrary(lubridate)\n# Pour utiliser le pipe %&gt;%\nlibrary(magrittr)\n# Le tidyverse proprement dit\nlibrary(tidyverse)\n# Les packages importés par le tidyverse sont :\n# - dplyr (manipulation de données)\n# - tidyr (réorganisation de bases de données)\n# - readr (importation de données)\n# - purrr (permet de réaliser des boucles)\n# - tibble (format de données tibble, complémentaire du data.frame)\n# - stringr (manipulation de chaînes de caractères)\n# - ggplot2 (création de graphiques)\n# - forcats (gestion des formats \"factors\")\n# Documentation de tidyverse\nvignette(\"dplyr\")\n\n\n\n\n# Les packages doivent au préalable être installés sur le disque dur\n# Pour installer un package :\n# install.packages(\"nom_du_package\")\nlibrary(data.table)\n# Documentation de data.table\n?'[.data.table'\n# Pour manipuler les dates\nlibrary(lubridate)",
    "crumbs": [
      "Aide-mémoire"
    ]
  },
  {
    "objectID": "01-aide_memoire_r_sas.html#création-dune-base-de-données-sas-dexemple",
    "href": "01-aide_memoire_r_sas.html#création-dune-base-de-données-sas-dexemple",
    "title": "Aide-mémoire SAS - R",
    "section": "2.1 Création d’une base de données SAS d’exemple",
    "text": "2.1 Création d’une base de données SAS d’exemple\n\nSASR basetidyversedata.tablearrow/duckdbpolars\n\n\n/* Données fictives sur des formations */\ndata donnees_sas;\n  infile cards dsd dlm='|';\n  format Identifiant $3. Sexe 1. CSP $1. Niveau $30. Date_naissance ddmmyy10. Date_entree ddmmyy10. Duree Note_Contenu Note_Formateur Note_Moyens\n         Note_Accompagnement Note_Materiel poids_sondage 4.1 CSPF $25. Sexef $5.;\n  input Identifiant $ Sexe CSP $ Niveau $ Date_naissance :ddmmyy10. Date_entree :ddmmyy10. Duree Note_Contenu Note_Formateur Note_Moyens\n        Note_Accompagnement Note_Materiel poids_sondage CSPF $ Sexef $;\n  cards;\n  173|2|1|Qualifié|17/06/1998|01/01/2021|308|12|6|17|4|19|117.1|Cadre|Femme\n  173|2|1|Qualifié|17/06/1998|01/01/2022|365|6||12|7|14|98.3|Cadre|Femme\n  173|2|1|Qualifié|17/06/1998|06/01/2022|185|8|10|11|1|9|214.6|Cadre|Femme\n  173|2|1|Non qualifié|17/06/1998|02/01/2023|365|14|15|15|10|8|84.7|Cadre|Femme\n  174|1|1|Qualifié|08/12/1984|17/08/2021|183|17|18|20|15|12|65.9|Cadre|Homme\n  175|1|1|Qualifié|16/09/1989|21/12/2022|730|5|5|8|4|9|148.2|Cadre|Homme\n  198|2|3|Non qualifié|17/03/1987|28/07/2022|30|10|10|10|16|8|89.6|Employé|Femme\n  198|2|3|Qualifié|17/03/1987|17/11/2022|164|11|7|6|14|13|100.3|Employé|Femme\n  198|2|3|Qualifié|17/03/1987|21/02/2023|365|9|20|3|4|17|49.3|Employé|Femme\n  168|1|2|Qualifié|30/07/2002|04/09/2019|365|18|11|20|13|15|148.2|Profession intermédiaire|Homme\n  211|2|3|Non qualifié||17/12/2021|135|16|16|15|12|9|86.4|Employé|Femme\n  278|1|5|Qualifié|10/08/1948|07/06/2018|365|14|10|6|8|12|99.2|Retraité|Homme\n  347|2|5|Qualifié|13/09/1955||180|12|5|7|11|12|105.6|Retraité|Femme\n  112|1|3|Non qualifié|13/09/2001|02/03/2022|212|3|10|11|9|8|123.1|Employé|Homme\n  112|1|3|Non qualifié|13/09/2001|01/03/2021|365|7|13|8|19|2|137.4|Employé|Homme\n  112|1|3|Qualifié|13/09/2001|01/12/2023|365|9|||||187.6|Employé|Homme\n  087|2|4|Non qualifié|||365||10||||87.3|Ouvrier|Femme\n  087|2|4|Non qualifié||31/10/2020|365|||11|||87.3|Ouvrier|Femme\n  099|1|4|Qualifié|06/06/1998|01/03/2021|364|12|11|10|12|13|169.3|Ouvrier|Homme\n  099|1|4|Qualifié|06/06/1998|01/03/2022|364|12|11|10|12|13|169.3|Ouvrier|Homme\n  099|1|4|Qualifié|06/06/1998|01/03/2023|364|12|11|10|12|13|169.3|Ouvrier|Homme\n  187|2|2|Qualifié|05/12/1986|01/01/2022|364|10|10|10|10|10|169.3|Profession intermédiaire|Femme\n  187|2|2|Qualifié|05/12/1986|01/01/2023|364|10|10|10|10|10|234.1|Profession intermédiaire|Femme\n  689|1|1||01/12/2000|06/11/2017|123|9|7|8|13|16|189.3|Cadre|Homme\n  765|1|4|Non qualifié|26/12/1995|17/04/2020|160|13|10|12|18|10|45.9|Ouvrier|Homme\n  765|1|4|Non qualifié|26/12/1995|17/04/2020|160|13|10|12|18|10|45.9|Ouvrier|Homme\n  765|1|4|Non qualifié|26/12/1995|17/04/2020|160|13|10|12|18|10|45.9|Ouvrier|Homme\n  ;\nrun;\n\n/* Date de sortie du dispositif : ajout de la durée à la date d'entrée */\ndata donnees_sas;\n  set donnees_sas;\n  format date_sortie ddmmyy10.;\n  date_sortie = intnx('day', date_entree, duree);\nrun;\n\n\n\n# Données fictives sur des formations\ndonnees_rbase &lt;- data.frame(\n  Identifiant = c(\"173\", \"173\", \"173\", \"173\", \"174\", \"175\", \"198\", \"198\", \"198\", \"168\", \"211\", \"278\", \"347\", \"112\", \"112\", \"112\", \"087\", \"087\", \"099\", \"099\", \"099\", \"187\", \"187\", \"689\", \"765\", \"765\", \"765\"),\n  Sexe = c(\"2\", \"2\", \"2\", \"2\", \"1\", \"1\", \"2\", \"2\", \"2\", \"1\", \"2\", \"1\", \"2\", \"1\", \"1\", \"1\", \"2\", \"2\", \"1\", \"1\", \"1\", \"2\", \"2\", \"1\", \"1\", \"1\", \"1\"),\n  CSP = c(\"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"3\", \"3\", \"3\", \"2\", \"3\", \"5\", \"5\", \"3\", \"3\", \"3\", \"4\", \"4\", \"4\", \"4\", \"4\", \"2\", \"2\", \"1\", \"4\", \"4\", \"4\"),\n  Niveau = c(\"Qualifié\", \"Qualifié\", \"Qualifié\", \"Non qualifié\", \"Qualifié\", \"Qualifié\", \"Non qualifié\", \"Qualifié\", \"Qualifié\", \"Qualifié\", \"Non qualifié\", \"Qualifié\", \"Qualifié\", \"Non qualifié\", \n             \"Non qualifié\", \"Qualifié\", \"Non qualifié\", \"Non qualifié\", \"Qualifié\", \"Qualifié\", \"Qualifié\", \"Qualifié\", \"Qualifié\", NA, \"Non qualifié\", \"Non qualifié\", \"Non qualifié\"),\n  Date_naissance = c(\"17/06/1998\", \"17/06/1998\", \"17/06/1998\", \"17/06/1998\", \"08/12/1984\", \"16/09/1989\", \"17/03/1987\", \"17/03/1987\", \"17/03/1987\", \"30/07/2002\", NA, \"10/08/1948\", \n                     \"13/09/1955\", \"13/09/2001\", \"13/09/2001\", \"13/09/2001\", NA, NA, \"06/06/1998\", \"06/06/1998\", \"06/06/1998\", \"05/12/1986\", \"05/12/1986\", \"01/12/2000\", \"26/12/1995\", \"26/12/1995\", \"26/12/1995\"),\n  Date_entree = c(\"01/01/2021\", \"01/01/2022\", \"06/01/2022\", \"02/01/2023\", \"17/08/2021\", \"21/12/2022\", \"28/07/2022\", \"17/11/2022\", \"21/02/2023\", \"04/09/2019\", \"17/12/2021\", \"07/06/2018\", NA, \"02/03/2022\", \"01/03/2021\", \"01/12/2023\", NA, \n                  \"31/10/2020\", \"01/03/2021\", \"01/03/2022\", \"01/03/2023\", \"01/01/2022\", \"01/01/2023\", \"06/11/2017\", \"17/04/2020\", \"17/04/2020\", \"17/04/2020\"),\n  Duree = c(\"308\", \"365\", \"185\", \"365\", \"183\", \"730\", \"30\", \"164\", \"365\", \"365\", \"135\", \"365\", \"180\", \"212\", \"365\", \"365\", \"365\", \"365\", \"364\", \"364\", \"364\", \"364\", \"364\", \"123\", \"160\", \"160\", \"160\"),\n  Note_Contenu = c(\"12\", \"6\", \"8\", \"14\", \"17\", \"5\", \"10\", \"11\", \"9\", \"18\", \"16\", \"14\", \"12\", \"3\", \"7\", \"9\", NA, NA, \"12\", \"12\", \"12\", \"10\", \"10\", \"9\", \"13\", \"13\", \"13\"),\n  Note_Formateur = c(\"6\", NA, \"10\", \"15\", \"18\", \"5\", \"10\", \"7\", \"20\", \"11\", \"16\", \"10\", \"5\", \"10\", \"13\", NA, \"10\", NA, \"11\", \"11\", \"11\", \"10\", \"10\", \"7\", \"10\", \"10\", \"10\"),\n  Note_Moyens = c(\"17\", \"12\", \"11\", \"15\", \"20\", \"8\", \"10\", \"6\", \"3\", \"20\", \"15\", \"6\", \"7\", \"11\", \"8\", NA, NA, \"11\", \"10\", \"10\", \"10\", \"10\", \"10\", \"8\", \"12\", \"12\", \"12\"),\n  Note_Accompagnement = c(\"4\", \"7\", \"1\", \"10\", \"15\", \"4\", \"16\", \"14\", \"4\", \"13\", \"12\", \"8\", \"11\", \"9\", \"19\", NA, NA, NA, \"12\", \"12\", \"12\", \"10\", \"10\", \"13\", \"18\", \"18\", \"18\"),\n  Note_Materiel = c(\"19\", \"14\", \"9\", \"8\", \"12\", \"9\", \"8\", \"13\", \"17\", \"15\", \"9\", \"12\", \"12\", \"8\", \"2\", NA, NA, NA, \"13\", \"13\", \"13\", \"10\", \"10\", \"16\", \"10\", \"10\", \"10\"),\n  poids_sondage = c(\"117.1\", \"98.3\", \"214.6\", \"84.7\", \"65.9\", \"148.2\", \"89.6\", \"100.3\", \"49.3\", \"148.2\", \"86.4\", \"99.2\", \"105.6\", \"123.1\", \"137.4\", \"187.6\", \"87.3\", \"87.3\",\n                    \"169.3\", \"169.3\", \"169.3\", \"169.3\", \"234.1\", \"189.3\", \"45.9\", \"45.9\", \"45.9\"),\n  CSPF = c(\"Cadre\", \"Cadre\", \"Cadre\", \"Cadre\", \"Cadre\",\"Cadre\", \"Employé\", \"Employé\", \"Employé\", \"Profession intermédiaire\", \"Employé\", \"Retraité\", \"Retraité\", \"Employé\",\n           \"Employé\", \"Employé\", \"Ouvrier\", \"Ouvrier\", \"Ouvrier\", \"Ouvrier\", \"Ouvrier\", \"Profession intermédiaire\", \"Profession intermédiaire\", \"Cadre\", \"Ouvrier\", \"Ouvrier\",\n           \"Ouvrier\"),\n  Sexef = c(\"Femme\", \"Femme\", \"Femme\", \"Femme\", \"Homme\", \"Homme\", \"Femme\", \"Femme\", \"Femme\", \"Homme\", \"Femme\", \"Homme\", \"Femme\", \"Homme\", \"Homme\", \"Homme\", \"Femme\", \"Femme\",\n            \"Homme\", \"Homme\", \"Homme\", \"Femme\", \"Femme\", \"Homme\", \"Homme\", \"Homme\", \"Homme\")\n)\n\n# Mise en forme des données\n# On vérifie que la base importée est bien un data.frame\nis.data.frame(donnees_rbase)\n\n# R est sensible à la casse, il est pertinent d'harmoniser les noms des variables en minuscule\n# Renommer les colonnes de la base\ncolnames(donnees_rbase) &lt;- tolower(colnames(donnees_rbase))\n# Autre possibilité\nsetNames(donnees_rbase, tolower(names(donnees_rbase)))\n\n# On a importé toutes les variables en format caractère\n# On convertit certaines variables en format numérique\nenNumerique &lt;- c(\"duree\", \"note_contenu\", \"note_formateur\", \"note_moyens\", \"note_accompagnement\", \"note_materiel\")\ndonnees_rbase[, enNumerique] &lt;- lapply(donnees_rbase[, enNumerique], as.integer)\ndonnees_rbase$poids_sondage &lt;- as.numeric(donnees_rbase$poids_sondage)\n\n# On récupère les variables dont le nom débute par le mot \"date\"\nenDate &lt;- names(donnees_rbase)[grepl(\"date\", tolower(names(donnees_rbase)))]\n# On remplace / par - dans les dates\ndonnees_rbase[, enDate] &lt;- lapply(donnees_rbase[, enDate], function(x) gsub(\"/\", \"-\", x))\n# On exprime les dates en format Date\ndonnees_rbase[, enDate] &lt;- lapply(donnees_rbase[, enDate], lubridate::dmy)\n\n# Date de sortie du dispositif\ndonnees_rbase$date_sortie &lt;- donnees_rbase$date_entree + lubridate::days(donnees_rbase$duree)\n\n# Format de la base\nclass(donnees_rbase)\n\n\n\n\n# Données fictives sur des formations\n# Autre solution !\ndonnees_tidyverse &lt;- tibble(\n  Identifiant = c(\"173\", \"173\", \"173\", \"173\", \"174\", \"175\", \"198\", \"198\", \"198\", \"168\", \"211\", \"278\", \"347\", \"112\", \"112\", \"112\", \"087\", \"087\", \"099\", \"099\", \"099\", \"187\", \"187\", \"689\", \"765\", \"765\", \"765\"),\n  Sexe = c(\"2\", \"2\", \"2\", \"2\", \"1\", \"1\", \"2\", \"2\", \"2\", \"1\", \"2\", \"1\", \"2\", \"1\", \"1\", \"1\", \"2\", \"2\", \"1\", \"1\", \"1\", \"2\", \"2\", \"1\", \"1\", \"1\", \"1\"),\n  CSP = c(\"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"3\", \"3\", \"3\", \"2\", \"3\", \"5\", \"5\", \"3\", \"3\", \"3\", \"4\", \"4\", \"4\", \"4\", \"4\", \"2\", \"2\", \"1\", \"4\", \"4\", \"4\"),\n  Niveau = c(\"Qualifié\", \"Qualifié\", \"Qualifié\", \"Non qualifié\", \"Qualifié\", \"Qualifié\", \"Non qualifié\", \"Qualifié\", \"Qualifié\", \"Qualifié\", \"Non qualifié\", \"Qualifié\", \"Qualifié\", \"Non qualifié\", \n             \"Non qualifié\", \"Qualifié\", \"Non qualifié\", \"Non qualifié\", \"Qualifié\", \"Qualifié\", \"Qualifié\", \"Qualifié\", \"Qualifié\", NA, \"Non qualifié\", \"Non qualifié\", \"Non qualifié\"),\n  Date_naissance = c(\"17/06/1998\", \"17/06/1998\", \"17/06/1998\", \"17/06/1998\", \"08/12/1984\", \"16/09/1989\", \"17/03/1987\", \"17/03/1987\", \"17/03/1987\", \"30/07/2002\", NA, \"10/08/1948\", \n                     \"13/09/1955\", \"13/09/2001\", \"13/09/2001\", \"13/09/2001\", NA, NA, \"06/06/1998\", \"06/06/1998\", \"06/06/1998\", \"05/12/1986\", \"05/12/1986\", \"01/12/2000\", \"26/12/1995\", \"26/12/1995\", \"26/12/1995\"),\n  Date_entree = c(\"01/01/2021\", \"01/01/2022\", \"06/01/2022\", \"02/01/2023\", \"17/08/2021\", \"21/12/2022\", \"28/07/2022\", \"17/11/2022\", \"21/02/2023\", \"04/09/2019\", \"17/12/2021\", \"07/06/2018\", NA, \"02/03/2022\", \"01/03/2021\", \"01/12/2023\", NA, \n                  \"31/10/2020\", \"01/03/2021\", \"01/03/2022\", \"01/03/2023\", \"01/01/2022\", \"01/01/2023\", \"06/11/2017\", \"17/04/2020\", \"17/04/2020\", \"17/04/2020\"),\n  Duree = c(\"308\", \"365\", \"185\", \"365\", \"183\", \"730\", \"30\", \"164\", \"365\", \"365\", \"135\", \"365\", \"180\", \"212\", \"365\", \"365\", \"365\", \"365\", \"364\", \"364\", \"364\", \"364\", \"364\", \"123\", \"160\", \"160\", \"160\"),\n  Note_Contenu = c(\"12\", \"6\", \"8\", \"14\", \"17\", \"5\", \"10\", \"11\", \"9\", \"18\", \"16\", \"14\", \"12\", \"3\", \"7\", \"9\", NA, NA, \"12\", \"12\", \"12\", \"10\", \"10\", \"9\", \"13\", \"13\", \"13\"),\n  Note_Formateur = c(\"6\", NA, \"10\", \"15\", \"18\", \"5\", \"10\", \"7\", \"20\", \"11\", \"16\", \"10\", \"5\", \"10\", \"13\", NA, \"10\", NA, \"11\", \"11\", \"11\", \"10\", \"10\", \"7\", \"10\", \"10\", \"10\"),\n  Note_Moyens = c(\"17\", \"12\", \"11\", \"15\", \"20\", \"8\", \"10\", \"6\", \"3\", \"20\", \"15\", \"6\", \"7\", \"11\", \"8\", NA, NA, \"11\", \"10\", \"10\", \"10\", \"10\", \"10\", \"8\", \"12\", \"12\", \"12\"),\n  Note_Accompagnement = c(\"4\", \"7\", \"1\", \"10\", \"15\", \"4\", \"16\", \"14\", \"4\", \"13\", \"12\", \"8\", \"11\", \"9\", \"19\", NA, NA, NA, \"12\", \"12\", \"12\", \"10\", \"10\", \"13\", \"18\", \"18\", \"18\"),\n  Note_Materiel = c(\"19\", \"14\", \"9\", \"8\", \"12\", \"9\", \"8\", \"13\", \"17\", \"15\", \"9\", \"12\", \"12\", \"8\", \"2\", NA, NA, NA, \"13\", \"13\", \"13\", \"10\", \"10\", \"16\", \"10\", \"10\", \"10\"),\n  poids_sondage = c(\"117.1\", \"98.3\", \"214.6\", \"84.7\", \"65.9\", \"148.2\", \"89.6\", \"100.3\", \"49.3\", \"148.2\", \"86.4\", \"99.2\", \"105.6\", \"123.1\", \"137.4\", \"187.6\", \"87.3\", \"87.3\",\n                    \"169.3\", \"169.3\", \"169.3\", \"169.3\", \"234.1\", \"189.3\", \"45.9\", \"45.9\", \"45.9\"),\n  CSPF = c(\"Cadre\", \"Cadre\", \"Cadre\", \"Cadre\", \"Cadre\",\"Cadre\", \"Employé\", \"Employé\", \"Employé\", \"Profession intermédiaire\", \"Employé\", \"Retraité\", \"Retraité\", \"Employé\",\n           \"Employé\", \"Employé\", \"Ouvrier\", \"Ouvrier\", \"Ouvrier\", \"Ouvrier\", \"Ouvrier\", \"Profession intermédiaire\", \"Profession intermédiaire\", \"Cadre\", \"Ouvrier\", \"Ouvrier\",\n           \"Ouvrier\"),\n  Sexef = c(\"Femme\", \"Femme\", \"Femme\", \"Femme\", \"Homme\", \"Homme\", \"Femme\", \"Femme\", \"Femme\", \"Homme\", \"Femme\", \"Homme\", \"Femme\", \"Homme\", \"Homme\", \"Homme\", \"Femme\", \"Femme\",\n            \"Homme\", \"Homme\", \"Homme\", \"Femme\", \"Femme\", \"Homme\", \"Homme\", \"Homme\", \"Homme\")\n  \n)\n\n# Mise en forme des données\n\n# On vérifie que la base importée est bien un tibble\nis_tibble(donnees_tidyverse)\n\n# Transformation en tibble, le format de Tidyverse\ndonnees_tidyverse &lt;- tibble::as_tibble(donnees_tidyverse)\n\n# R est sensible à la casse, il est pertinent d'harmoniser les noms des variables en minuscule\n# Renommer les colonnes de la base en minuscule\ndonnees_tidyverse &lt;- donnees_tidyverse %&gt;% rename_with(tolower)\n# Autre solution\ndonnees_tidyverse &lt;- donnees_tidyverse %&gt;% \n  magrittr::set_colnames(value = casefold(colnames(.), upper = FALSE))\n\n# On a importé toutes les variables en format caractère\n# On convertit certaines variables en format numérique\nenNumerique &lt;- c(\"duree\", \"note_contenu\", \"note_formateur\", \"note_moyens\", \"note_accompagnement\", \"note_materiel\")\n# On convertit certaines variables au format date\n# On récupère d'abord les variables dont le nom débute par le mot \"date\"\nenDate &lt;- names(donnees_tidyverse)[grepl(\"date\", tolower(names(donnees_tidyverse)))]\n\ndonnees_tidyverse &lt;- donnees_tidyverse %&gt;%  \n  mutate_at(enNumerique, as.integer) %&gt;% \n  mutate(poids_sondage = as.numeric(poids_sondage)) %&gt;% \n  mutate_at(enDate, lubridate::dmy)\n\n# Date de sortie du dispositif\ndonnees_tidyverse &lt;- donnees_tidyverse %&gt;% \n  mutate(date_sortie = date_entree + lubridate::days(duree))\n\n# Format de la base\nclass(donnees_tidyverse)\n\n\n\n\n# Données fictives sur des formations\ndonnees_datatable &lt;- data.table(\n  Identifiant = c(\"173\", \"173\", \"173\", \"173\", \"174\", \"175\", \"198\", \"198\", \"198\", \"168\", \"211\", \"278\", \"347\", \"112\", \"112\", \"112\", \"087\", \"087\", \"099\", \"099\", \"099\", \"187\", \"187\", \"689\", \"765\", \"765\", \"765\"),\n  Sexe = c(\"2\", \"2\", \"2\", \"2\", \"1\", \"1\", \"2\", \"2\", \"2\", \"1\", \"2\", \"1\", \"2\", \"1\", \"1\", \"1\", \"2\", \"2\", \"1\", \"1\", \"1\", \"2\", \"2\", \"1\", \"1\", \"1\", \"1\"),\n  CSP = c(\"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"3\", \"3\", \"3\", \"2\", \"3\", \"5\", \"5\", \"3\", \"3\", \"3\", \"4\", \"4\", \"4\", \"4\", \"4\", \"2\", \"2\", \"1\", \"4\", \"4\", \"4\"),\n  Niveau = c(\"Qualifié\", \"Qualifié\", \"Qualifié\", \"Non qualifié\", \"Qualifié\", \"Qualifié\", \"Non qualifié\", \"Qualifié\", \"Qualifié\", \"Qualifié\", \"Non qualifié\", \"Qualifié\", \"Qualifié\", \"Non qualifié\", \n             \"Non qualifié\", \"Qualifié\", \"Non qualifié\", \"Non qualifié\", \"Qualifié\", \"Qualifié\", \"Qualifié\", \"Qualifié\", \"Qualifié\", NA, \"Non qualifié\", \"Non qualifié\", \"Non qualifié\"),\n  Date_naissance = c(\"17/06/1998\", \"17/06/1998\", \"17/06/1998\", \"17/06/1998\", \"08/12/1984\", \"16/09/1989\", \"17/03/1987\", \"17/03/1987\", \"17/03/1987\", \"30/07/2002\", NA, \"10/08/1948\", \n                     \"13/09/1955\", \"13/09/2001\", \"13/09/2001\", \"13/09/2001\", NA, NA, \"06/06/1998\", \"06/06/1998\", \"06/06/1998\", \"05/12/1986\", \"05/12/1986\", \"01/12/2000\", \"26/12/1995\", \"26/12/1995\", \"26/12/1995\"),\n  Date_entree = c(\"01/01/2021\", \"01/01/2022\", \"06/01/2022\", \"02/01/2023\", \"17/08/2021\", \"21/12/2022\", \"28/07/2022\", \"17/11/2022\", \"21/02/2023\", \"04/09/2019\", \"17/12/2021\", \"07/06/2018\", NA, \"02/03/2022\", \"01/03/2021\", \"01/12/2023\", NA, \n                  \"31/10/2020\", \"01/03/2021\", \"01/03/2022\", \"01/03/2023\", \"01/01/2022\", \"01/01/2023\", \"06/11/2017\", \"17/04/2020\", \"17/04/2020\", \"17/04/2020\"),\n  Duree = c(\"308\", \"365\", \"185\", \"365\", \"183\", \"730\", \"30\", \"164\", \"365\", \"365\", \"135\", \"365\", \"180\", \"212\", \"365\", \"365\", \"365\", \"365\", \"364\", \"364\", \"364\", \"364\", \"364\", \"123\", \"160\", \"160\", \"160\"),\n  Note_Contenu = c(\"12\", \"6\", \"8\", \"14\", \"17\", \"5\", \"10\", \"11\", \"9\", \"18\", \"16\", \"14\", \"12\", \"3\", \"7\", \"9\", NA, NA, \"12\", \"12\", \"12\", \"10\", \"10\", \"9\", \"13\", \"13\", \"13\"),\n  Note_Formateur = c(\"6\", NA, \"10\", \"15\", \"18\", \"5\", \"10\", \"7\", \"20\", \"11\", \"16\", \"10\", \"5\", \"10\", \"13\", NA, \"10\", NA, \"11\", \"11\", \"11\", \"10\", \"10\", \"7\", \"10\", \"10\", \"10\"),\n  Note_Moyens = c(\"17\", \"12\", \"11\", \"15\", \"20\", \"8\", \"10\", \"6\", \"3\", \"20\", \"15\", \"6\", \"7\", \"11\", \"8\", NA, NA, \"11\", \"10\", \"10\", \"10\", \"10\", \"10\", \"8\", \"12\", \"12\", \"12\"),\n  Note_Accompagnement = c(\"4\", \"7\", \"1\", \"10\", \"15\", \"4\", \"16\", \"14\", \"4\", \"13\", \"12\", \"8\", \"11\", \"9\", \"19\", NA, NA, NA, \"12\", \"12\", \"12\", \"10\", \"10\", \"13\", \"18\", \"18\", \"18\"),\n  Note_Materiel = c(\"19\", \"14\", \"9\", \"8\", \"12\", \"9\", \"8\", \"13\", \"17\", \"15\", \"9\", \"12\", \"12\", \"8\", \"2\", NA, NA, NA, \"13\", \"13\", \"13\", \"10\", \"10\", \"16\", \"10\", \"10\", \"10\"),\n  poids_sondage = c(\"117.1\", \"98.3\", \"214.6\", \"84.7\", \"65.9\", \"148.2\", \"89.6\", \"100.3\", \"49.3\", \"148.2\", \"86.4\", \"99.2\", \"105.6\", \"123.1\", \"137.4\", \"187.6\", \"87.3\", \"87.3\",\n                    \"169.3\", \"169.3\", \"169.3\", \"169.3\", \"234.1\", \"189.3\", \"45.9\", \"45.9\", \"45.9\"),\n  CSPF = c(\"Cadre\", \"Cadre\", \"Cadre\", \"Cadre\", \"Cadre\",\"Cadre\", \"Employé\", \"Employé\", \"Employé\", \"Profession intermédiaire\", \"Employé\", \"Retraité\", \"Retraité\", \"Employé\",\n           \"Employé\", \"Employé\", \"Ouvrier\", \"Ouvrier\", \"Ouvrier\", \"Ouvrier\", \"Ouvrier\", \"Profession intermédiaire\", \"Profession intermédiaire\", \"Cadre\", \"Ouvrier\", \"Ouvrier\",\n           \"Ouvrier\"),\n  Sexef = c(\"Femme\", \"Femme\", \"Femme\", \"Femme\", \"Homme\", \"Homme\", \"Femme\", \"Femme\", \"Femme\", \"Homme\", \"Femme\", \"Homme\", \"Femme\", \"Homme\", \"Homme\", \"Homme\", \"Femme\", \"Femme\",\n            \"Homme\", \"Homme\", \"Homme\", \"Femme\", \"Femme\", \"Homme\", \"Homme\", \"Homme\", \"Homme\")\n)\n\n\n# Mise en forme des données\n\n# On vérifie que la base est bien un data.table\nis.data.table(donnees_datatable)\n\n# Transformation en data.frame\nsetDF(donnees_datatable)\nis.data.frame(donnees_datatable)\n\n# Transformation en data.table\n# En data.table, les instructions débutant par set modifient les éléments par référence, c'est-à-dire sans copie.\n# Ceci est plus efficace pour manipuler des données volumineuses.\nsetDT(donnees_datatable)\nis.data.table(donnees_datatable)\n# Autre possibilité\ndonnees_datatable &lt;- as.data.table(donnees_datatable)\n\n\n# Est-ce une liste ?\nis.list(donnees_datatable)\n\n# Extraire les noms des variables de la base\n# R est sensible à la casse, il est pertinent d'harmoniser les noms des variables en minuscule\nnomCol &lt;- tolower(colnames(donnees_datatable))\n# Renommer les colonnes de la base\ncolnames(donnees_datatable) &lt;- tolower(colnames(donnees_datatable))\n\n# On convertit certaines variables en format 'numeric'\nenNumerique &lt;- c(\"duree\", \"note_contenu\", \"note_formateur\", \"note_moyens\", \"note_accompagnement\", \"note_materiel\")\n# Ne pas oublier le . devant SDcols !!!!\ndonnees_datatable[, lapply(.SD, as.integer), .SDcols = enNumerique]\n# Autre solution\n# En data.table, les instructions débutant par set modifient les éléments par référence, c'est-à-dire sans copie.\n# Ceci est plus efficace pour manipuler des données volumineuses.\nfor (j in enNumerique) {\n  set(donnees_datatable, j = j, value = as.numeric(donnees_datatable[[j]]))\n}\ndonnees_datatable[, poids_sondage := as.numeric(poids_sondage)]\n\n# On récupère les variables dont le nom débute par le mot \"date\"\nvarDates &lt;- names(donnees_datatable)[grepl(\"date\", tolower(names(donnees_datatable)))]\n# On remplace / par - dans les dates\ndonnees_datatable[, (varDates) := lapply(.SD, function(x) gsub(\"/\", \"-\", x)), .SDcols = varDates]\n# On exprime les dates en format Date\ndonnees_datatable[, (varDates) := lapply(.SD, lubridate::dmy), .SDcols = varDates]\n\n# Date de sortie du dispositif\ndonnees_datatable[, date_sortie := date_entree + lubridate::days(duree)]\n\n# Format de la base\nclass(donnees_datatable)",
    "crumbs": [
      "Aide-mémoire"
    ]
  },
  {
    "objectID": "01-aide_memoire_r_sas.html#chemin-du-bureau-de-lutilisateur",
    "href": "01-aide_memoire_r_sas.html#chemin-du-bureau-de-lutilisateur",
    "title": "Aide-mémoire SAS - R",
    "section": "3.1 Chemin du bureau de l’utilisateur",
    "text": "3.1 Chemin du bureau de l’utilisateur\n\nSASR basetidyversedata.tablearrow/duckdbpolars\n\n\n/* On vide la log */\ndm \"log; clear; \";\n/* On récupère déjà l'identifiant de l'utilisateur (systèmes Windows) */\n%let user = &sysuserid;\n/* Chemin proprement dit */\n%let bureau = C:\\Users\\&user.\\Desktop;\nlibname bur \"&bureau.\";\n\n\n\n# Informations sur les variables\nstr(donnees_rbase)\n# Statistiques descriptives des variables de la base\nsummary(donnees_rbase)\nlibrary(Hmisc)\nHmisc::describe(donnees_rbase)\n# Visualiser la base de données\nView(donnees_rbase)\n\n\n\n\n# On récupère déjà l'identifiant de l'utilisateur\nuser &lt;- Sys.getenv(\"USERNAME\")\nchemin &lt;- file.path(\"C:/Users\", user, \"Desktop\")\n\n\n\n\n# On récupère déjà l'identifiant de l'utilisateur\nuser &lt;- Sys.getenv(\"USERNAME\")\nchemin &lt;- file.path(\"C:/Users\", user, \"Desktop\")",
    "crumbs": [
      "Aide-mémoire"
    ]
  },
  {
    "objectID": "01-aide_memoire_r_sas.html#affichage-de-lannée",
    "href": "01-aide_memoire_r_sas.html#affichage-de-lannée",
    "title": "Aide-mémoire SAS - R",
    "section": "3.2 Affichage de l’année",
    "text": "3.2 Affichage de l’année\n\nSASR basetidyversedata.tablearrow/duckdbpolars\n\n\n/* Année courante */\n%let an = %sysfunc(year(%sysfunc(today())));\n/* & (esperluette) indique à SAS qu'il doit remplacer an par sa valeur définie par le %let */\n%put Année : &an.;\n/* Autre possibilité */\ndata _null_;call symput('annee', strip(year(today())));run;\n%put Année (autre méthode) : &annee.;\n/* Année passée */\n%put Année passée : %eval(&an. - 1);\n\n\n\nx &lt;- 10\ndonnees_rbase[1:x, ]\nhead(donnees_rbase, x)\n\n\n\n\n# Année courante\nannee &lt;- lubridate::year(Sys.Date())\nsprintf(\"Année : %04d\", annee)\nprint(paste0(\"Année : \", annee))\n# Année passée\nannee_1 &lt;- annee - 1\npaste0(\"Année passée: \", annee_1)\n\n\n\n\n# Année courante\nannee &lt;- lubridate::year(Sys.Date())\nsprintf(\"Année : %04d\", annee)\nprint(paste0(\"Année : \", annee))\n# Année passée\nannee_1 &lt;- annee - 1\npaste0(\"Année passée: \", annee_1)",
    "crumbs": [
      "Aide-mémoire"
    ]
  },
  {
    "objectID": "01-aide_memoire_r_sas.html#construction-des-instructions-if-else",
    "href": "01-aide_memoire_r_sas.html#construction-des-instructions-if-else",
    "title": "Aide-mémoire SAS - R",
    "section": "3.3 Construction des instructions if / else",
    "text": "3.3 Construction des instructions if / else\n\nSASR basetidyversedata.tablearrow/duckdbpolars\n\n\n%macro Annee(an);\n  %if &an. &gt;= 2024 %then %put Nous sommes en 2024 ou après !;\n  %else %put Nous sommes avant 2024 !;\n%mend Annee;\n%Annee(&an.);\n\n\n\nx &lt;- 10\ntail(donnees_rbase, x)\ndonnees_rbase[ ( nrow(donnees_rbase) - x ) : nrow(donnees_rbase), ]\n# Les parenthèses sont importantes. Comparer les deux expressions ! Bon exemple du recycling\n( nrow(donnees_rbase) - x ) : nrow(donnees_rbase)\nnrow(donnees_rbase) - x : nrow(donnees_rbase)\n\n\n\n\n# Construction incorrecte ! Le else doit être sur la même ligne que le {\n#if (annee &gt;= 2024) {\n#  print(\"Nous sommes en 2024 ou après\")\n#}\n#else {\n#  print(\"Nous sommes en 2024 ou avant\")\n#}\n## Construction correcte ! Le else doit être sur la même ligne que le {\nif (annee &gt;= 2024) {\n  print(\"Nous sommes en 2024 ou après\")\n} else {\n  print(\"Nous sommes avant 2024 !\")\n}\n\n\n\n\n# Construction incorrecte ! Le else doit être sur la même ligne que le {\n#if (annee &gt;= 2024) {\n#  print(\"Nous sommes en 2024 ou après\")\n#}\n#else {\n#  print(\"Nous sommes avant 2024\")\n#}\n## Construction correcte ! Le else doit être sur la même ligne que le {\nif (annee &gt;= 2024) {\n  print(\"Nous sommes en 2024 ou après\")\n} else {\n  print(\"Nous sommes avant 2024 !\")\n}",
    "crumbs": [
      "Aide-mémoire"
    ]
  },
  {
    "objectID": "01-aide_memoire_r_sas.html#répertoire-de-travail",
    "href": "01-aide_memoire_r_sas.html#répertoire-de-travail",
    "title": "Aide-mémoire SAS - R",
    "section": "3.4 Répertoire de travail",
    "text": "3.4 Répertoire de travail\n\nSASR basetidyversedata.tablearrow/duckdbpolars\n\n\n/* Afficher le répertoire de travail par défaut (la Work) */\n%let chemin_work = %sysfunc(pathname(work));\n%put &chemin_work.;\nproc sql;\n  select path from dictionary.libnames where libname = \"WORK\";\nquit;\n/* Définir le répertoire de travail, si besoin */\n/* libname \"nom du répertoire\";\n\n\n\nsprintf(\"Nombre de lignes : %d | Nombre de colonnes : %d\", dim(donnees_rbase)[1], dim(donnees_rbase)[2])\nsprintf(\"Nombre de lignes : %d | Nombre de colonnes : %d\", nrow(donnees_rbase), ncol(donnees_rbase))\n\n\n\n\n# Afficher le répertoire de travail\ngetwd()\n\n# Définir le répertoire de travail, si besoin\n#setwd(dir=\"nom du répertoire\")\n\n\n\n\n# Afficher le répertoire de travail\ngetwd()\n\n# Définir le répertoire de travail, si besoin\n#setwd(dir=\"nom du répertoire\")",
    "crumbs": [
      "Aide-mémoire"
    ]
  },
  {
    "objectID": "01-aide_memoire_r_sas.html#autres-points-à-connaître",
    "href": "01-aide_memoire_r_sas.html#autres-points-à-connaître",
    "title": "Aide-mémoire SAS - R",
    "section": "3.5 Autres points à connaître",
    "text": "3.5 Autres points à connaître\n\nSASR basetidyversedata.tablearrow/duckdbpolars\n\n\n/* Mise en garde : certains codes SAS pourraient aussi avec profit être écrits en langage SAS IML (Interactive Matrix Language).\n   Cet aide-mémoire n'ayant pas vocation à être un dictionnaire SAS, cette méthode d'écriture n'est pas proposée ici. */\n\n\n\n# Liste des variables par ordre d'apparition dans la base\nnames(donnees_rbase)\ncolnames(donnees_rbase)\n# Liste des variables par ordre alphabétique\nls(donnees_rbase)\nsort(colnames(donnees_rbase))\n\n\n\n\n# tidyverse promeut l'utilisation du pipe (%&gt;%), qui permet d'enchaîner des opérations sur une même base modifiée successivement.\n# 2 types de pipes existent, le pipe de magrittr (%&gt;%) et le pipe de R-Base (|&gt;, à partir de la version 4.1)\n# Les fonctionnalités simples des deux opérateurs sont identiques, mais il existe des différences.\n# Le tidyverse peut s'utiliser sans pipe, mais le pipe simplifie la gestion des programmes.\n# Les autres environnements (R-Base, data.table) peuvent aussi se présenter avec le pipe\n# Dans cet aide-mémoire, le pipe de magrittr (%&gt;%) est privilégié.\n\n# À FAIRE :\n# - expliquer les différences entre le pipe de magrittr et de R-Base\n\n# Documentation de tidyverse (dplyr et tidyr)\nvignette(\"dplyr\")\n\n\n\n\n# Principe de base de data.table\n#dt[i, j, by]\n# i : sélection de lignes (instructions )\n# j : sélection et manipulation de colonnes\n# by : groupements",
    "crumbs": [
      "Aide-mémoire"
    ]
  },
  {
    "objectID": "01-aide_memoire_r_sas.html#avoir-une-vue-densemble-des-données",
    "href": "01-aide_memoire_r_sas.html#avoir-une-vue-densemble-des-données",
    "title": "Aide-mémoire SAS - R",
    "section": "4.1 Avoir une vue d’ensemble des données",
    "text": "4.1 Avoir une vue d’ensemble des données\n\nSASR basetidyversedata.tablearrow/duckdb\n\n\n/* Statistiques globales sur les variables numériques */\nproc means data = donnees_sas n mean median min p10 p25 median p75 p90 max;var _numeric_;run;\n/* Statistiques globales sur les variables caractères */\nproc freq data = donnees_sas;tables _character_ / missing;run;\n\n\n\nvariable &lt;- \"date_entree\"\npos &lt;- match(variable, names(donnees_rbase))\nsprintf(\"La variable %s se trouve en colonne n°%s !\", variable, pos)\n\n\n\n\n# Informations sur les variables\nstr(donnees_tidyverse)\ndonnees_tidyverse %&gt;% str()\ndonnees_tidyverse %&gt;% glimpse()\n# Statistiques descriptives des variables de la base\ndonnees_tidyverse %&gt;% summary()\n# Visualiser la base de données\ndonnees_tidyverse %&gt;% View()\n\n\n\n\n# Informations sur les variables\nstr(donnees_datatable)\n# Statistiques descriptives des variables de la base\nsummary(donnees_datatable)\n# Visualiser la base de données\nView(donnees_datatable)",
    "crumbs": [
      "Aide-mémoire"
    ]
  },
  {
    "objectID": "01-aide_memoire_r_sas.html#extraire-les-x-premières-lignes-de-la-base-10-par-défaut",
    "href": "01-aide_memoire_r_sas.html#extraire-les-x-premières-lignes-de-la-base-10-par-défaut",
    "title": "Aide-mémoire SAS - R",
    "section": "4.2 Extraire les x premières lignes de la base (10 par défaut)",
    "text": "4.2 Extraire les x premières lignes de la base (10 par défaut)\n\nSASR basetidyversedata.tablearrow/duckdb\n\n\n%let x = 10;\nproc print data = donnees_sas (firstobs = 1 obs = &x.);run;\n/* Ou alors */\ndata Lignes&x.;set donnees_sas (firstobs = 1 obs = &x.);proc print;run;\n\n\n\nsapply(donnees_rbase, class)\n\n\n\n\nx &lt;- 10\ndonnees_tidyverse %&gt;% \n  slice(1:x)\n\n\n\n\ndonnees_datatable[, head(.SD, 10)]\ndonnees_datatable[, .SD[1:10]]\nhead(donnees_datatable, 10)",
    "crumbs": [
      "Aide-mémoire"
    ]
  },
  {
    "objectID": "01-aide_memoire_r_sas.html#extraire-les-x-dernières-lignes-de-la-base-10-par-défaut",
    "href": "01-aide_memoire_r_sas.html#extraire-les-x-dernières-lignes-de-la-base-10-par-défaut",
    "title": "Aide-mémoire SAS - R",
    "section": "4.3 Extraire les x dernières lignes de la base (10 par défaut)",
    "text": "4.3 Extraire les x dernières lignes de la base (10 par défaut)\n\nSASR basetidyversedata.tablearrow/duckdb\n\n\n%let x = 10;\nproc sql noprint;select count(*) into :total_lignes from donnees_sas;quit;\n%let deb = %eval(&total_lignes. - &x. + 1);\ndata Lignes_&x.;set donnees_sas (firstobs = &deb. obs = &total_lignes.);run;\n\n\n\n######################################################## Préambule ##########################################################\n\n\n\n\nx &lt;- 10\ndonnees_tidyverse %&gt;% \n  slice( (n()-10) : n())\n\n\n\n\ndonnees_datatable[, tail(.SD, 10)]\ntail(donnees_datatable, 10)",
    "crumbs": [
      "Aide-mémoire"
    ]
  },
  {
    "objectID": "01-aide_memoire_r_sas.html#nombre-de-lignes-et-de-colonnes-dans-la-base",
    "href": "01-aide_memoire_r_sas.html#nombre-de-lignes-et-de-colonnes-dans-la-base",
    "title": "Aide-mémoire SAS - R",
    "section": "4.4 Nombre de lignes et de colonnes dans la base",
    "text": "4.4 Nombre de lignes et de colonnes dans la base\n\nSASR basetidyversedata.tablearrow/duckdb\n\n\n/* Nombre de lignes */\nproc sql;select count(*) as Nb_Lignes from donnees_sas;quit;\nproc sql;\n  select count(*) as Nb_Lignes, count(distinct identifiant) as Nb_Identifiants\n  from donnees_sas;\nquit;\n/* Liste des variables de la base dans la base Var */\nproc contents data = donnees_sas out = Var noprint;run;\n/* Nombre de colonnes */\nproc sql;select count(*) as Nb_Colonnes from Var;run;\n\n\n\n# On récupère déjà l'identifiant de l'utilisateur\nuser &lt;- Sys.getenv(\"USERNAME\")\nchemin &lt;- file.path(\"C:/Users\", user, \"Desktop\")\n\n\n\n\nsprintf(\"Nombre de lignes : %d | Nombre de colonnes : %d\",\n        donnees_tidyverse %&gt;% nrow(),\n        donnees_tidyverse %&gt;% ncol())\n# Nombre de lignes\ndonnees_tidyverse %&gt;% nrow()\n# Nombre de colonnes\ndonnees_tidyverse %&gt;% ncol()\n\n\n\n\ndim(donnees_datatable) ; dim(donnees_datatable)[1] ; dim(donnees_datatable)[2]\ndim(donnees_datatable) ; nrow(donnees_datatable) ; ncol(donnees_datatable)\nsprintf(\"Nombre de lignes : %d | Nombre de colonnes : %d\", dim(donnees_datatable)[1], dim(donnees_datatable)[2])",
    "crumbs": [
      "Aide-mémoire"
    ]
  },
  {
    "objectID": "01-aide_memoire_r_sas.html#liste-des-variables-de-la-base",
    "href": "01-aide_memoire_r_sas.html#liste-des-variables-de-la-base",
    "title": "Aide-mémoire SAS - R",
    "section": "4.5 Liste des variables de la base",
    "text": "4.5 Liste des variables de la base\n\nSASR basetidyversedata.tablearrow/duckdb\n\n\n/* Par ordre d'apparition dans la base */\nproc contents data = donnees_sas out = Var noprint;run;\nproc sql;select name into :nom_col separated by \" \" from Var order by varnum;run;\n/* On affiche les noms des variables */\n%put Liste des variables : &nom_col.;\n/* Par ordre alphabétique */\nproc contents data = donnees_sas out = Var noprint;run;\nproc sql;select name into :nom_col separated by \" \" from Var;run;\n/* On affiche les noms des variables */\n%put Liste des variables : &nom_col.;\n\n\n\n# Année courante\nannee &lt;- lubridate::year(Sys.Date())\nsprintf(\"Année : %04d\", annee)\nprint(paste0(\"Année : \", annee))\n# Année passée\nannee_1 &lt;- annee - 1\npaste0(\"Année passée: \", annee_1)\n\n\n\n\n# Liste des variables par ordre d'apparition dans la base\ndonnees_tidyverse %&gt;% colnames()\n# Liste des variables par ordre alphabétique\ndonnees_tidyverse %&gt;% colnames() %&gt;% sort()\n\n\n\n\n# Liste des variables par ordre d'apparition dans la base\ncolnames(donnees_datatable)\n# Liste des variables par ordre alphabétique\nsort(colnames(donnees_datatable))",
    "crumbs": [
      "Aide-mémoire"
    ]
  },
  {
    "objectID": "01-aide_memoire_r_sas.html#nombre-didentifiants-uniques-et-nombre-de-lignes-dans-la-base",
    "href": "01-aide_memoire_r_sas.html#nombre-didentifiants-uniques-et-nombre-de-lignes-dans-la-base",
    "title": "Aide-mémoire SAS - R",
    "section": "4.6 Nombre d’identifiants uniques et nombre de lignes dans la base",
    "text": "4.6 Nombre d’identifiants uniques et nombre de lignes dans la base\n\nSASR basetidyversedata.tablearrow/duckdb\n\n\nproc sql;\n  select count(*) as Nb_Lignes, count(distinct identifiant) as Nb_Identifiants_Uniques\n  from donnees_sas;\nquit;\n\n\n\n# Construction incorrecte ! Le else doit être sur la même ligne que le {\n#if (annee &gt;= 2024) {\n#  print(\"Nous sommes en 2024 ou après\")\n#}\n#else {\n#  print(\"Nous sommes en 2023 ou avant\")\n#}\n## Construction correcte ! Le else doit être sur la même ligne que le {\nif (annee &gt;= 2024) {\n  print(\"Nous sommes en 2024 ou après\")\n} else {\n  print(\"Nous sommes avant 2024 !\")\n}\n\n\n\n\nsprintf(\"La base de données contient %d lignes et %d identifiants uniques !\",\n        donnees_tidyverse %&gt;% nrow(),\n        donnees_tidyverse %&gt;% select(identifiant) %&gt;%\n          n_distinct()\n        )\n# Autre solution pour le nombre d'identifiants uniques\ndonnees_tidyverse %&gt;% select(identifiant) %&gt;% n_distinct()\ndonnees_tidyverse %&gt;% distinct(identifiant) %&gt;% nrow()\n\n\n\n\nsprintf(\"La base de données contient %d lignes et %d identifiants uniques !\",\n        nrow(donnees_datatable),\n        donnees_datatable[, uniqueN(identifiant)])\n# Identifiants uniques\ndonnees_datatable[, uniqueN(identifiant)]",
    "crumbs": [
      "Aide-mémoire"
    ]
  },
  {
    "objectID": "01-aide_memoire_r_sas.html#quelle-est-la-position-de-la-variable-date_entree",
    "href": "01-aide_memoire_r_sas.html#quelle-est-la-position-de-la-variable-date_entree",
    "title": "Aide-mémoire SAS - R",
    "section": "4.7 Quelle est la position de la variable date_entree ?",
    "text": "4.7 Quelle est la position de la variable date_entree ?\n\nSASR basetidyversedata.tablearrow/duckdb\n\n\n%let var = date_entree;\nproc contents data = donnees_sas out = Var noprint;run;\nproc sql;\n  select varnum as Position from Var where lowcase(NAME) = \"&var.\";\nrun;\n\n\n\n# Afficher le répertoire de travail\ngetwd()\n\n# Définir le répertoire de travail, si besoin\n#setwd(dir=\"nom du répertoire\")\n\n\n\n\nvariable &lt;- \"date_entree\"\npos &lt;- match(variable, donnees_tidyverse %&gt;% colnames())\nsprintf(\"La variable %s se trouve en colonne n°%s !\", variable, pos)\n\n\n\n\nvariable &lt;- \"date_entree\"\npos &lt;- match(variable, names(donnees_datatable))\nsprintf(\"La variable %s se trouve en colonne n°%s !\", variable, pos)",
    "crumbs": [
      "Aide-mémoire"
    ]
  },
  {
    "objectID": "01-aide_memoire_r_sas.html#format-des-variables",
    "href": "01-aide_memoire_r_sas.html#format-des-variables",
    "title": "Aide-mémoire SAS - R",
    "section": "4.8 Format des variables",
    "text": "4.8 Format des variables\n\nSASR basetidyversedata.tablearrow/duckdb\n\n\nproc contents data = donnees_sas;run;\n\n/* On supprime la base Var temporaire */\nproc datasets lib = Work nolist;delete Var;run;\n\n\n\n# Le pipe peut aussi être utilisé avec R-Base et data.table\n# Le pipe permet d'enchaîner des opérations sur une même base\n1:10 |&gt; sum()\n\n[1] 55\n\nSys.time()\n\n[1] \"2024-05-06 15:24:58 UTC\"\n\n# R-Base est réputé plus lent que ses concurrents, ce qui est souvent vrai.\n# Mais certaines fonctions en R-Base être très rapides (rowsum, rowSums, tapply, etc.)\n\n\n\n\npurrr::map(donnees_tidyverse, class)\nclass(donnees_tidyverse)\n\n\n\n\ndonnees_datatable[, lapply(.SD, class)]",
    "crumbs": [
      "Aide-mémoire"
    ]
  }
]